name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    name: Validate code
    # runs-on: ubuntu-latest
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@3ba5b86a2a6916f8cb0e64dcca30a56732a34bdf
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get --check-locked
      - name: Look out for unused dependencies
        run: mix deps.unlock --check-unused
      - name: Check compilation
        run: mix compile --warnings-as-errors
      - name: Check formatting
        run: mix format --check-formatted
      - name: Run Credo
        run: mix credo --strict
      - name: Check gettext files are up-to-date
        run: mix gettext.extract --check-up-to-date

  test:
    name: Build and test
    # runs-on: ubuntu-latest
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: anacounts_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@3ba5b86a2a6916f8cb0e64dcca30a56732a34bdf
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test --warnings-as-errors
